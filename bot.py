import asyncio
import os
from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

try:
    from config.settings import config
except ValueError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    print("üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–≥–æ: BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
    exit(1)

from utils.logger import logger
from middlewares.throttling import ThrottlingMiddleware

from routers import commands
from routers.handlers import tasks, stats

async def main():
    """–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    os.makedirs("storage", exist_ok=True)
    
    bot = Bot(
        token=config.bot_token,
        default=DefaultBotProperties(parse_mode=ParseMode.MARKDOWN)
    )
    dp = Dispatcher()
    
    # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ middleware
    dp.message.middleware(ThrottlingMiddleware(rate_limit=1.0))
    
    # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
    dp.include_router(commands.router)
    dp.include_router(tasks.router)
    dp.include_router(stats.router)
    
    logger.info("–±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    
    try:
        await dp.start_polling(bot)
    except Exception as e:
        logger.error(f"–æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())